# version: 0.2
# env:
#   variables:
#     AWS_ACCOUNT_ID: "965080479351"
#     AWS_REGION: "ap-southeast-1"
#     IMAGE_REPO_NAME: "nodejs-hello"
#     ECR_REGISTRY: "965080479351.dkr.ecr.ap-southeast-1.amazonaws.com"
#     ECS_CLUSTER: "my-cluster"
#     SERVICE_NAME: "ecs-service"

# phases:
#   pre_build:
#     commands:
#       - echo Logging into Amazon ECR...
#       - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
#       - echo Building Docker image...
#       - docker build -t $IMAGE_REPO_NAME:$CODEBUILD_RESOLVED_SOURCE_VERSION .
#       - echo Tagging Docker image...
#       - docker tag $IMAGE_REPO_NAME:$CODEBUILD_RESOLVED_SOURCE_VERSION $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:$CODEBUILD_RESOLVED_SOURCE_VERSION

#   build:
#     commands:
#       - echo Pushing Docker image to Amazon ECR...
#       - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:$CODEBUILD_RESOLVED_SOURCE_VERSION
#       - echo Writing image definitions file...
#       - printf '[{"name":"app-container","imageUri":"%s"}]' $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:$CODEBUILD_RESOLVED_SOURCE_VERSION > imagedefinitions.json
#       # #############update###########
#       # - echo Preparing task definition file...
#       # - cp task-definition.json task-definition-temp.json
#       # - sed -i "s|\$AWS_ACCOUNT_ID|$AWS_ACCOUNT_ID|g" task-definition-temp.json
#       # - sed -i "s|\$AWS_REGION|$AWS_REGION|g" task-definition-temp.json
#       # - sed -i "s|\$IMAGE_REPO_NAME|$IMAGE_REPO_NAME|g" task-definition-temp.json
#       # - sed -i "s|\$CODEBUILD_RESOLVED_SOURCE_VERSION|$CODEBUILD_RESOLVED_SOURCE_VERSION|g" task-definition-temp.json
#       # # Output the contents for debugging
#       # - echo "Contents of task-definition-temp.json:"
#       # - cat task-definition-temp.json
#       # - echo Registering ECS Task Definition...
#       # - aws ecs register-task-definition --cli-input-json file://task-definition-temp.json

#       #  ####Update path#########
#       # # Get the latest task definition ARN dynamically
#       # - echo Fetching the latest task definition ARN...
#       # - LATEST_TASK_DEFINITION_ARN=$(aws ecs list-task-definitions --family-prefix $TASK_FAMILY --sort DESC --region $AWS_REGION --query "taskDefinitionArns[0]" --output text)
#       # - echo "Latest Task Definition ARN: $LATEST_TASK_DEFINITION_ARN"

#       # # Update the ECS service with the latest task definition
#       # - echo Updating the ECS service with the latest task definition...
#       # - aws ecs update-service --cluster $ECS_CLUSTER --service $SERVICE_NAME --task-definition $LATEST_TASK_DEFINITION_ARN --region $AWS_REGION
#       # #########update###########
#   post_build:
#     commands:
#       - echo Uploading imagedefinitions.json to S3...
#       - aws s3 cp imagedefinitions.json s3://nodejs-helloworld/imagedefinitions.json  
#       - echo Build complete. Imagedefinitions file uploaded to S3.

# artifacts:
#   files:
#     - imagedefinitions.json
#     # - task-definition-temp.json



# version: 0.2
# env:
#   variables:
#     AWS_ACCOUNT_ID: "965080479351"
#     AWS_REGION: "ap-southeast-1"
#     IMAGE_REPO_NAME: "nodejs-hello"
#     ECS_CLUSTER: "my-cluster"
#     SERVICE_NAME: "ecs-service"

# phases:
#   pre_build:
#     commands:
#       - echo Logging in to Amazon ECR...
#       - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
#       - IMAGE_TAG=$(date +%Y%m%d%H%M%S)
#       - echo $IMAGE_TAG
#   build:
#     commands:
#       - echo Building the Docker image...
#       - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
#       - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
#   post_build:
#     commands:
#       - echo Pushing the Docker image...
#       - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
#       - echo Writing image definitions...
#       - printf '[{"name":"todo-app-container","imageUri":"%s"}]' $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG > imagedefinitions.json
#       - echo Preparing task definition file...
#       - cp task-definition.json task-definition-temp.json
#       - sed -i "s|\$AWS_ACCOUNT_ID|$AWS_ACCOUNT_ID|g" task-definition-temp.json
#       - sed -i "s|\$AWS_REGION|$AWS_REGION|g" task-definition-temp.json
#       - sed -i "s|\$IMAGE_REPO_NAME|$IMAGE_REPO_NAME|g" task-definition-temp.json
#       - sed -i "s|\$IMAGE_TAG|$IMAGE_TAG|g" task-definition-temp.json
#       # Output the contents for debugging
#       - echo "Contents of task-definition-temp.json:"
#       - cat task-definition-temp.json
#       - echo Registering ECS Task Definition...
#       - aws ecs register-task-definition --cli-input-json file://task-definition-temp.json

#       ####Update path#########
#       # Get the latest task definition ARN dynamically
#       - echo Fetching the latest task definition ARN...
#       - LATEST_TASK_DEFINITION_ARN=$(aws ecs list-task-definitions --family-prefix $TASK_FAMILY --sort DESC --region $AWS_REGION --query "taskDefinitionArns[0]" --output text)
#       - echo "Latest Task Definition ARN: $LATEST_TASK_DEFINITION_ARN"

#       # Update the ECS service with the latest task definition
#       - echo Updating the ECS service with the latest task definition...
#       - aws ecs update-service --cluster $ECS_CLUSTER --service $SERVICE_NAME --task-definition $LATEST_TASK_DEFINITION_ARN --region $AWS_REGION

# artifacts:
#   files:
#     - imagedefinitions.json
#     - task-definition-temp.json

#   # Uploading artifacts to S3
#   base-directory: .  # Current directory (root of CodeBuild environment)
#   discard-paths: yes
#   s3:
#     bucket: nodejs-helloworld/helloworld  # Directory inside your S3 bucket

version: 0.2
env:
  variables:
    AWS_ACCOUNT_ID: "965080479351"
    AWS_DEFAULT_REGION: "ap-southeast-1"
    IMAGE_REPO_NAME: "nodejs-hello"
    ECS_CLUSTER: "my-cluster"
    SERVICE_NAME: "ecs-service"

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - IMAGE_TAG=$(date +%Y%m%d%H%M%S)
      - echo $IMAGE_TAG
  build:
    commands:
      - echo Building the Docker image...
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
  post_build:
    commands:
      - echo Pushing the Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - echo Writing image definitions...
      - printf '[{"name":"todo-app-container","imageUri":"%s"}]' $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG > imagedefinitions.json
      - echo Preparing task definition file...
      - cp task-definition.json task-definition-temp.json
      - sed -i "s|\$AWS_ACCOUNT_ID|$AWS_ACCOUNT_ID|g" task-definition-temp.json
      - sed -i "s|\$AWS_DEFAULT_REGION|ap-southeast-1|g" task-definition-temp.json
      - sed -i "s|\$IMAGE_REPO_NAME|$IMAGE_REPO_NAME|g" task-definition-temp.json
      - sed -i "s|\$IMAGE_TAG|$IMAGE_TAG|g" task-definition-temp.json
      # Output the contents for debugging
      - echo "Contents of task-definition-temp.json:"
      - cat task-definition-temp.json
      - echo Registering ECS Task Definition...
      - aws ecs register-task-definition --cli-input-json file://task-definition-temp.json

      ####Update path#########
      # Get the latest task definition ARN dynamically
      # - echo Fetching the latest task definition ARN...
      # - LATEST_TASK_DEFINITION_ARN=$(aws ecs list-task-definitions --sort DESC --region "ap-southeast-1" --query "taskDefinitionArns[0]" --output text)
      # - echo "Latest Task Definition ARN: $LATEST_TASK_DEFINITION_ARN"

      # # # Update the ECS service with the latest task definition
      # - echo Updating the ECS service with the latest task definition...
      # - aws ecs update-service --cluster $ECS_CLUSTER --service $SERVICE_NAME --task-definition $LATEST_TASK_DEFINITION_ARN --region $AWS_DEFAULT_REGION
      - echo Updating ECS Service with new task definition...
      - NEW_TASK_DEF_ARN=$(aws ecs describe-task-definition --task-definition ecs-task  --query "taskDefinition.taskDefinitionArn" --output text)
      - echo $NEW_TASK_DEF_ARN
      - aws ecs update-service --cluster $ECS_CLUSTER --service $SERVICE_NAME --task-definition $NEW_TASK_DEF_ARN --force-new-deployment
      
artifacts:
  files:
    - imagedefinitions.json
    - task-definition-temp.json

  # Uploading artifacts to S3
  base-directory: .  # Current directory (root of CodeBuild environment)
  discard-paths: yes
  s3:
    bucket: nodejs-helloworld
    path: nodejs-helloworld/node-hello  # Directory inside your S3 bucket
